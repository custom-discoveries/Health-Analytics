CREATE QUERY get_common_patients (vertex<Provider> provider1,
  vertex<Provider> provider2) SYNTAX V2{
/*
    Get the Patients that two Providers have in common.

    Sample inputs:
        provider1 = "Douglas Thomas"
        provider2 = "Helen Su"
*/
    OrAccum @visited;
    SetAccum<edge> @@edges_to_display;

    Pre1 = {provider1};
    Pre2 = {provider2};

    // 1 – Get claims associated with provider1. Mark visited claims.
    claims1 = SELECT t
              FROM  Pre1:s -(<submitted_by:e)- Claim:t
              ACCUM t.@visited += true;
    // 2 – For those claims, get the linked patients. Mark visited patients.
    patients1 = SELECT t
                FROM  claims1:s -(associated>:e)- Patient:t
                ACCUM t.@visited += true;

    // 3 – Get claims associated with provider2. Mark visited claims.
    claims2 = SELECT t
              FROM  Pre2:s -(<submitted_by:e)- Claim:t
              ACCUM t.@visited += true;

    // 4 – For those claims, get the linked patients who were visited in Step 2
    common_patients = SELECT t
                      FROM  claims2:s -(associated>:e)- Patient:t
                      WHERE t.@visited == true;
    PRINT common_patients;

    // 5 – Get the claims linked to the common patients. Collect the edges.
    claims = SELECT t
             FROM  common_patients:s -(<associated:e)- Claim:t
             WHERE t.@visited == true
             ACCUM @@edges_to_display += e;
    PRINT claims;

    // 6 – Collect the edges connecting these claims to the input providers.
    claims = SELECT t
           FROM  claims:s -(submitted_by>:e)- :t
           ACCUM @@edges_to_display += e;
    PRINT @@edges_to_display;
}